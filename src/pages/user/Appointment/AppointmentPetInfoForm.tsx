import { Input, Select, Row, Col, Typography, Space, Card } from "antd";
import {
  UserOutlined,
  CalendarOutlined,
  ExperimentOutlined,
} from "@ant-design/icons";

const { Text } = Typography;
const { Option } = Select as any;

export interface AppointmentPetInfo {
  name: string;
  breed: string;
  species: string;
  gender: boolean;
  age: number;
  weight: number;
}

interface AppointmentPetInfoFormProps {
  petInfo: AppointmentPetInfo;
  onPetInfoChange: (petInfo: AppointmentPetInfo) => void;
}

export default function AppointmentPetInfoForm({
  petInfo,
  onPetInfoChange,
}: AppointmentPetInfoFormProps) {
  const handleChange = (field: keyof AppointmentPetInfo, value: any) => {
    onPetInfoChange({ ...petInfo, [field]: value });
  };

  return (
    <Card
      title={
        <Space>
          <span className="text-2xl">üêæ</span>Th√¥ng tin th√∫ c∆∞ng
        </Space>
      }
    >
      <Space direction="vertical" size="middle" className="w-full">
        <Row gutter={[16, 16]}>
          <Col xs={24} sm={12}>
            <div>
              <Text strong>T√™n th√∫ c∆∞ng *</Text>
              <Input
                placeholder="Nh·∫≠p t√™n th√∫ c∆∞ng"
                value={petInfo.name}
                onChange={(e) => handleChange("name", e.target.value)}
                prefix={<UserOutlined />}
                className="mt-1"
              />
            </div>
          </Col>
          <Col xs={24} sm={12}>
            <div>
              <Text strong>Gi·ªëng *</Text>
              <Input
                placeholder="V√≠ d·ª•: Golden Retriever, Persian"
                value={petInfo.breed}
                onChange={(e) => handleChange("breed", e.target.value)}
                className="mt-1"
              />
            </div>
          </Col>
          <Col xs={24} sm={12}>
            <div>
              <Text strong>Lo√†i *</Text>
              <Select
                placeholder="Ch·ªçn lo√†i"
                value={petInfo.species}
                onChange={(value) => handleChange("species", value)}
                className="w-full mt-1"
              >
                <Option value="Ch√≥">üêï Ch√≥</Option>
                <Option value="M√®o">üê± M√®o</Option>
                <Option value="Chim">üê¶ Chim</Option>
                <Option value="C√°">üê† C√°</Option>
                <Option value="Kh√°c">üêæ Kh√°c</Option>
              </Select>
            </div>
          </Col>
          <Col xs={24} sm={12}>
            <div>
              <Text strong>Gi·ªõi t√≠nh *</Text>
              <Select
                placeholder="Ch·ªçn gi·ªõi t√≠nh"
                value={petInfo.gender}
                onChange={(value) => handleChange("gender", value)}
                className="w-full mt-1"
              >
                <Option value={true}>‚ôÇ ƒê·ª±c</Option>
                <Option value={false}>‚ôÄ C√°i</Option>
              </Select>
            </div>
          </Col>
          <Col xs={24} sm={12}>
            <div>
              <Text strong>Tu·ªïi (th√°ng) *</Text>
              <Input
                type="number"
                placeholder="Nh·∫≠p tu·ªïi b·∫±ng th√°ng"
                value={petInfo.age}
                onChange={(e) =>
                  handleChange("age", parseInt(e.target.value) || 0)
                }
                prefix={<CalendarOutlined />}
                className="mt-1"
                min={1}
                max={300}
              />
            </div>
          </Col>
          <Col xs={24} sm={12}>
            <div>
              <Text strong>C√¢n n·∫∑ng (kg) *</Text>
              <Input
                type="number"
                placeholder="Nh·∫≠p c√¢n n·∫∑ng"
                value={petInfo.weight}
                onChange={(e) =>
                  handleChange("weight", parseFloat(e.target.value) || 0)
                }
                prefix={<ExperimentOutlined />}
                className="mt-1"
                min={0.1}
                max={100}
                step={0.1}
              />
            </div>
          </Col>
        </Row>
        <div className="bg-blue-50 p-3 rounded-lg">
          <Text type="secondary" className="text-sm">
            üí° <strong>L∆∞u √Ω:</strong> Th√¥ng tin ch√≠nh x√°c gi√∫p ch√∫ng t√¥i ph·ª•c
            v·ª• t·ªët h∆°n.
          </Text>
        </div>
      </Space>
    </Card>
  );
}
